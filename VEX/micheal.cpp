#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, dgtl1,  liftEn,         sensorQuadEncoder)
#pragma config(Sensor, I2C_1,  lwheel,         sensorNone)
#pragma config(Sensor, I2C_2,  rwheel,         sensorNone)
#pragma config(Sensor, I2C_3,  clawEn,         sensorQuadEncoderOnI2CPort,    , AutoAssign )
#pragma config(Sensor, I2C_4,  armEn,          sensorQuadEncoderOnI2CPort,    , AutoAssign )
#pragma config(Motor,  port2,           lift1,         tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           lift2,         tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           lift3,         tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port5,           lift4,         tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           armr,          tmotorVex269_MC29, openLoop, encoderPort, I2C_3)
#pragma config(Motor,  port7,           claw,          tmotorVex269_MC29, openLoop, encoderPort, I2C_4)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void reset(){
	SensorValue[liftEn] = 0;
	nMotorEncoder[claw] = 0;
}

task main()
{
	int pwn,pwn2;
	reset();
	while(1){
		pwn = vexRT[Ch3];
		motor[lift1] = pwn;
		motor[lift2] = pwn;
		motor[lift3] = pwn;
		motor[lift4] = pwn;
		motor[armr] = vexRT[Ch2]/2;
		if(vexRT[Btn7U]){
			motor[claw] = 40;
		}else if(vexRT[Btn7D]){
			motor[claw] = -40;
		}else{
			motor[claw] = 0;
		}
		//writeDebugStreamLine("%d %d %d",SensorValue[liftEn],nMotorEncoder[claw],nMotorEncoder[armr]);
	}


}
